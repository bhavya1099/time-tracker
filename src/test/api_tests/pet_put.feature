# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

  Background:
    * url target
    * header Authorization = { token: '#(authToken)' }

  Scenario: Update an existing pet
    Given path '/v2/pet'
    And request
      """
      {
        "id": 1,
        "category": {
          "id": 1,
          "name": "Dogs"
        },
        "name": "doggie",
        "photoUrls": ["url1", "url2"],
        "tags": [
          {
            "id": 1,
            "name": "tag1"
          },
          {
            "id": 2,
            "name": "tag2"
          }
        ],
        "status": "available"
      }
      """
    When method post
    Then status 200
    And match response ==
      """
      {
        "id": '#number',
        "category": {
          "id": '#number',
          "name": '#string'
        },
        "name": '#string',
        "photoUrls": '#[]',
        "tags": '#[]',
        "status": '#string'
      }
      """

  @negative
  Scenario: Update an existing pet with invalid id
    Given path '/v2/pet'
    And request
      """
      {
        "id": "invalid_id",
        "category": {
          "id": 1,
          "name": "Dogs"
        },
        "name": "doggie",
        "photoUrls": ["url1", "url2"],
        "tags": [
          {
            "id": 1,
            "name": "tag1"
          },
          {
            "id": 2,
            "name": "tag2"
          }
        ],
        "status": "available"
      }
      """
    When method post
    Then status 400
