# ********RoostGPT********

# Test generated by RoostGPT for test artilleryTest using AI Type  and AI Model 
# 
# Feature file generated for /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records_post for http method type POST 
# RoostTestHash=5f512b4001
# 
# 

# ********RoostGPT********
Feature: Karate API Testing

  Background:
    * def urlBase = karate.properties['alias_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario: Test GET Method
    Given path '/kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records'
    And param cluster_id = 'my-cluster'
    And param topic_name = 'my-topic'
    When method GET
    Then status 200

  Scenario: Test POST Method
    Given path '/kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records'
    And param cluster_id = 'my-cluster'
    And param topic_name = 'my-topic'
    And request
      """
      {
        "partition_id": 1,
        "headers": [
          {
            "name": "Header-1",
            "value": "Value-1"
          }
        ],
        "key": {
          "type": "BINARY",
          "data": "Zm9vYmFy"
        },
        "value": {
          "type": "JSON",
          "data": {
            "foo": "bar"
          }
        },
        "timestamp": "2021-02-05T19:14:42Z"
      }
      """
    When method POST
    Then status 200

  Scenario Outline: Test PUT Method with Different Request Parameters
    Given path '/kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records'
    And param cluster_id = '<cluster_id>'
    And param topic_name = '<topic_name>'
    And request
      """
      {
        "partition_id": <partition_id>,
        "headers": [
          {
            "name": "Header-1",
            "value": "Value-1"
          }
        ],
        "key": {
          "type": "BINARY",
          "data": "Zm9vYmFy"
        },
        "value": {
          "type": "JSON",
          "data": {
              "foo": "bar"
          }
        },
        "timestamp": "2021-02-05T19:14:42Z"
      }
      """
    When method PUT
    Then status <expected_status>

    Examples:
      | cluster_id   | topic_name | partition_id | expected_status |
      | 'my-cluster' | 'my-topic' |            1 |             200 |
      | 'my-cluster' | 'my-topic' |            2 |             200 |
      | 'my-cluster' | 'my-topic' |            3 |             200 |

  Scenario: Test DELETE Method
    Given path '/kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records'
    And param cluster_id = 'my-cluster'
    And param topic_name = 'my-topic'
    When method DELETE
    Then status 200
