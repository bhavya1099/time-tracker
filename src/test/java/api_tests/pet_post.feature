# ********RoostGPT********

# Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_post for http method type POST 
# RoostTestHash=988c5ab2ac
# 
# 

# ********RoostGPT********
Feature: Pet Store Management

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def headers = { 'Authorization': '#(authToken)' }
  
  Scenario: Add a new pet to the store
    Given path '/v2/pet'
    And request { "id": #(id), "category": { "id": #(categoryId), "name": '#(categoryName)' }, "name": '#(name)', "photoUrls": '#(photoUrls)', "tags": { "id": #(tagId), "name": '#(tagName)' }, "status": '#(status)' }
    When method post
    Then status 200
    And match response == { "id": '#(id)', "category": { "id": '#(categoryId)', "name": '#(categoryName)' }, "name": '#(name)', "photoUrls": '#(photoUrls)', "tags": { "id": '#(tagId)', "name": '#(tagName)' }, "status": '#(status)' }

    Examples:
      | id | categoryId | categoryName | name   | photoUrls | tagId | tagName | status  |
      | 1  | 1          | 'Dogs'       | 'Rex'  | ['url1']  | 1     | 'tag1'  | 'sold'  |
      | 2  | 2          | 'Cats'       | 'Milo' | ['url2']  | 2     | 'tag2'  | 'sold'  |
