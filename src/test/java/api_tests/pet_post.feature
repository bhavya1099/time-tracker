# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_post for http method type POST 
# RoostTestHash=988c5ab2ac
# 
# 

# ********RoostGPT********
Feature: Pet Store Management

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def auth_token = karate.properties['AUTH_TOKEN'] || karate.get('auth_token', 'sample_token')
  * configure headers = { Authorization: '#(auth_token)' }

Scenario: Add a new pet to the store
  Given path '/v2/pet'
  And request { "id": 1, "name":"doggie", "photoUrls":["url1", "url2"], "tags": [{"id":1, "name":"tag1"}], "status":"available" }
  When method post
  Then status 200
  And match response.id == 1
  And match response.name == 'doggie'
  And match response.photoUrls contains 'url1'
  And match response.photoUrls contains 'url2'
  And match response.tags[0].id == 1
  And match response.tags[0].name == 'tag1'
  And match response.status == 'available'

Scenario: Invalid input while adding a new pet to the store
  Given path '/v2/pet'
  And request { "id": 1, "name":"", "photoUrls":["url1", "url2"], "tags": [{"id":1, "name":"tag1"}], "status":"available" }
  When method post
  Then status 405
  And match response.message contains 'Invalid input'
