# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=018c365850
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'dummyToken')
  * configure headers = { Authorization: '#(authToken)' }

Scenario: Get pet by ID
  Given path '/v2/pet/{petId}'
  And params { petId: '#(petId)' }
  When method get
  Then status 200
  And match response contains { id: '#number', category: '#object', name: '#string', photoUrls: '#[]', tags: '#[]', status: '#string' }
  And match response == { id: '#(petId)', category: { id: '#number', name: '#string' }, name: '#string', photoUrls: '#[]', tags: '#[]', status: '#string' }

Examples:
  | petId |
  | 1     |
  | 2     |
  | 3     |

Scenario: Invalid pet ID
  Given path '/v2/pet/{petId}'
  And params { petId: '#(invalidPetId)' }
  When method get
  Then status 400

Examples:
  | invalidPetId |
  | 'abc'        |
  | '-1'         |
  | '0'          |

Scenario: Pet not found
  Given path '/v2/pet/{petId}'
  And params { petId: '#(nonexistentPetId)' }
  When method get
  Then status 404

Examples:
  | nonexistentPetId |
  | 999999           |
  | 888888           |
  | 777777           |
