# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/findByTags_get for http method type GET 
# RoostTestHash=01adc2ed1e
# 
# 

# ********RoostGPT********
Feature: Test /v2/pet/findByTags API endpoint

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken')
  * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Test /v2/pet/findByTags endpoint with valid tags
  Given path '/v2/pet/findByTags'
  And param tags = '<tags>'
  When method get
  Then status 200
  And match response[*].name contains '<name>'
  And match response[*].photoUrls contains '<photoUrls>'
  And match response[*].status == '<status>'

  Examples:
    | tags   | name    | photoUrls | status   |
    | dog    | doggie  | url1      | available|
    | cat    | kittie  | url2      | sold     |

Scenario Outline: Test /v2/pet/findByTags endpoint with invalid tags
  Given path '/v2/pet/findByTags'
  And param tags = '<tags>'
  When method get
  Then status 400

  Examples:
    | tags   |
    | invalid|
    | null   |
