# ********RoostGPT********

# Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', '{{ $processEnvironment.AUTH_TOKEN }}')
  * configure headers = { Authorization: '#(authToken)' }

Scenario Outline: Update an existing pet
  Given path '/v2/pet'
  And request <body>
  When method post
  Then status <status_code>
  And match response == <response_body>

  Examples: 
    | body                                                                                          | status_code | response_body                   |
    | { "id": 1, "category": { "id": 1, "name": "dog" }, "name": "doggie", "photoUrls": ["url1"] } | 200         | { "message": "Pet updated" }   |
    | { "id": 2, "category": { "id": 2, "name": "cat" }, "name": "kitty", "photoUrls": ["url2"] }  | 200         | { "message": "Pet updated" }   |
    | { "id": 3, "category": { "id": 3, "name": "bird" }, "name": "tweety", "photoUrls": ["url3"] }| 400         | { "message": "Invalid ID" }     |
