# ********RoostGPT********

# Test generated by RoostGPT for test test-workflow using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', '{{ $processEnvironment.AUTH_TOKEN }}')
  * def authHeader = { Authorization: '#(authToken)' }

Scenario: Update an existing pet

  Given path '/v2/pet'
  And request
  """
  {
    "id": 1,
    "category": {
      "id": 1,
      "name": "Dogs"
    },
    "name": "doggie",
    "photoUrls": ["string"],
    "tags": [
      {
        "id": 1,
        "name": "tag1"
      }
    ],
    "status": "available"
  }
  """
  And headers authHeader
  When method put
  Then status 200
  And match response ==
  """
  {
    "id": "#number",
    "category": {
      "id": "#number",
      "name": "#string"
    },
    "name": "#string",
    "photoUrls": ["#string"],
    "tags": [
      {
        "id": "#number",
        "name": "#string"
      }
    ],
    "status": "#string"
  }
  """

Scenario Outline: Error scenarios for updating a pet

  Given path '/v2/pet'
  And request <request>
  And headers authHeader
  When method put
  Then status <status_code>
  And match response.description == <error_description>

  Examples:
    | request | status_code | error_description |
    | { "id": "string", "name": "doggie" } | 400 | "Invalid ID supplied" |
    | { "id": 1, "name": "doggie" } | 404 | "Pet not found" |
    | { "id": 1, "name": "doggie", "status": "unknown" } | 405 | "Validation exception" |
